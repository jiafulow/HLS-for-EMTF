// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sp_extend_sector (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inp_0_1_V_read,
        inp_0_2_V_read,
        inp_0_3_V_read,
        inp_0_4_V_read,
        inp_1_1_V_read,
        inp_1_2_V_read,
        inp_1_3_V_read,
        inp_1_4_V_read,
        inp_2_1_V_read,
        inp_2_2_V_read,
        inp_2_3_V_read,
        inp_2_4_V_read,
        inp_3_1_V_read,
        inp_3_2_V_read,
        inp_3_3_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19
);

parameter    ap_ST_st1_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv122_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [121:0] inp_0_1_V_read;
input  [121:0] inp_0_2_V_read;
input  [121:0] inp_0_3_V_read;
input  [121:0] inp_0_4_V_read;
input  [121:0] inp_1_1_V_read;
input  [121:0] inp_1_2_V_read;
input  [121:0] inp_1_3_V_read;
input  [121:0] inp_1_4_V_read;
input  [121:0] inp_2_1_V_read;
input  [121:0] inp_2_2_V_read;
input  [121:0] inp_2_3_V_read;
input  [121:0] inp_2_4_V_read;
input  [121:0] inp_3_1_V_read;
input  [121:0] inp_3_2_V_read;
input  [121:0] inp_3_3_V_read;
output  [121:0] ap_return_0;
output  [121:0] ap_return_1;
output  [121:0] ap_return_2;
output  [121:0] ap_return_3;
output  [121:0] ap_return_4;
output  [121:0] ap_return_5;
output  [121:0] ap_return_6;
output  [121:0] ap_return_7;
output  [121:0] ap_return_8;
output  [121:0] ap_return_9;
output  [121:0] ap_return_10;
output  [121:0] ap_return_11;
output  [121:0] ap_return_12;
output  [121:0] ap_return_13;
output  [121:0] ap_return_14;
output  [121:0] ap_return_15;
output  [121:0] ap_return_16;
output  [121:0] ap_return_17;
output  [121:0] ap_return_18;
output  [121:0] ap_return_19;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_18;
reg   [121:0] inst_temp1_V_0_0;
reg   [121:0] inst_temp2_V_0_0;
reg   [121:0] inst_temp1_V_0_1;
reg   [121:0] inst_temp2_V_0_1;
reg   [121:0] inst_temp1_V_0_2;
reg   [121:0] inst_temp2_V_0_2;
reg   [121:0] inst_temp1_V_0_3;
reg   [121:0] inst_temp2_V_0_3;
reg   [121:0] inst_temp1_V_0_4;
reg   [121:0] inst_temp2_V_0_4;
reg   [121:0] inst_temp1_V_1_0;
reg   [121:0] inst_temp2_V_1_0;
reg   [121:0] inst_temp1_V_1_1;
reg   [121:0] inst_temp2_V_1_1;
reg   [121:0] inst_temp1_V_1_2;
reg   [121:0] inst_temp2_V_1_2;
reg   [121:0] inst_temp1_V_1_3;
reg   [121:0] inst_temp2_V_1_3;
reg   [121:0] inst_temp1_V_1_4;
reg   [121:0] inst_temp2_V_1_4;
reg   [121:0] inst_temp1_V_2_0;
reg   [121:0] inst_temp2_V_2_0;
reg   [121:0] inst_temp1_V_2_1;
reg   [121:0] inst_temp2_V_2_1;
reg   [121:0] inst_temp1_V_2_2;
reg   [121:0] inst_temp2_V_2_2;
reg   [121:0] inst_temp1_V_2_3;
reg   [121:0] inst_temp2_V_2_3;
reg   [121:0] inst_temp1_V_2_4;
reg   [121:0] inst_temp2_V_2_4;
reg   [121:0] inst_temp1_V_3_0;
reg   [121:0] inst_temp2_V_3_0;
reg   [121:0] inst_temp1_V_3_1;
reg   [121:0] inst_temp2_V_3_1;
reg   [121:0] inst_temp1_V_3_2;
reg   [121:0] inst_temp2_V_3_2;
reg   [121:0] inst_temp1_V_3_3;
reg   [121:0] inst_temp2_V_3_3;
reg   [121:0] inst_temp1_V_3_4;
reg   [121:0] inst_temp2_V_3_4;
wire   [121:0] call_ret3_sp_extender_fu_222_ap_return_0;
wire   [121:0] call_ret3_sp_extender_fu_222_ap_return_1;
wire   [121:0] call_ret3_sp_extender_fu_222_ap_return_2;
wire   [121:0] call_ret3_0_1_sp_extender_fu_230_ap_return_0;
wire   [121:0] call_ret3_0_1_sp_extender_fu_230_ap_return_1;
wire   [121:0] call_ret3_0_1_sp_extender_fu_230_ap_return_2;
wire   [121:0] call_ret3_0_2_sp_extender_fu_238_ap_return_0;
wire   [121:0] call_ret3_0_2_sp_extender_fu_238_ap_return_1;
wire   [121:0] call_ret3_0_2_sp_extender_fu_238_ap_return_2;
wire   [121:0] call_ret3_0_3_sp_extender_fu_246_ap_return_0;
wire   [121:0] call_ret3_0_3_sp_extender_fu_246_ap_return_1;
wire   [121:0] call_ret3_0_3_sp_extender_fu_246_ap_return_2;
wire   [121:0] call_ret3_0_4_sp_extender_fu_254_ap_return_0;
wire   [121:0] call_ret3_0_4_sp_extender_fu_254_ap_return_1;
wire   [121:0] call_ret3_0_4_sp_extender_fu_254_ap_return_2;
wire   [121:0] call_ret3_1_sp_extender_fu_262_ap_return_0;
wire   [121:0] call_ret3_1_sp_extender_fu_262_ap_return_1;
wire   [121:0] call_ret3_1_sp_extender_fu_262_ap_return_2;
wire   [121:0] call_ret3_1_1_sp_extender_fu_270_ap_return_0;
wire   [121:0] call_ret3_1_1_sp_extender_fu_270_ap_return_1;
wire   [121:0] call_ret3_1_1_sp_extender_fu_270_ap_return_2;
wire   [121:0] call_ret3_1_2_sp_extender_fu_278_ap_return_0;
wire   [121:0] call_ret3_1_2_sp_extender_fu_278_ap_return_1;
wire   [121:0] call_ret3_1_2_sp_extender_fu_278_ap_return_2;
wire   [121:0] call_ret3_1_3_sp_extender_fu_286_ap_return_0;
wire   [121:0] call_ret3_1_3_sp_extender_fu_286_ap_return_1;
wire   [121:0] call_ret3_1_3_sp_extender_fu_286_ap_return_2;
wire   [121:0] call_ret3_1_4_sp_extender_fu_294_ap_return_0;
wire   [121:0] call_ret3_1_4_sp_extender_fu_294_ap_return_1;
wire   [121:0] call_ret3_1_4_sp_extender_fu_294_ap_return_2;
wire   [121:0] call_ret3_2_sp_extender_fu_302_ap_return_0;
wire   [121:0] call_ret3_2_sp_extender_fu_302_ap_return_1;
wire   [121:0] call_ret3_2_sp_extender_fu_302_ap_return_2;
wire   [121:0] call_ret3_2_1_sp_extender_fu_310_ap_return_0;
wire   [121:0] call_ret3_2_1_sp_extender_fu_310_ap_return_1;
wire   [121:0] call_ret3_2_1_sp_extender_fu_310_ap_return_2;
wire   [121:0] call_ret3_2_2_sp_extender_fu_318_ap_return_0;
wire   [121:0] call_ret3_2_2_sp_extender_fu_318_ap_return_1;
wire   [121:0] call_ret3_2_2_sp_extender_fu_318_ap_return_2;
wire   [121:0] call_ret3_2_3_sp_extender_fu_326_ap_return_0;
wire   [121:0] call_ret3_2_3_sp_extender_fu_326_ap_return_1;
wire   [121:0] call_ret3_2_3_sp_extender_fu_326_ap_return_2;
wire   [121:0] call_ret3_2_4_sp_extender_fu_334_ap_return_0;
wire   [121:0] call_ret3_2_4_sp_extender_fu_334_ap_return_1;
wire   [121:0] call_ret3_2_4_sp_extender_fu_334_ap_return_2;
wire   [121:0] call_ret3_3_sp_extender_fu_342_ap_return_0;
wire   [121:0] call_ret3_3_sp_extender_fu_342_ap_return_1;
wire   [121:0] call_ret3_3_sp_extender_fu_342_ap_return_2;
wire   [121:0] call_ret3_3_1_sp_extender_fu_350_ap_return_0;
wire   [121:0] call_ret3_3_1_sp_extender_fu_350_ap_return_1;
wire   [121:0] call_ret3_3_1_sp_extender_fu_350_ap_return_2;
wire   [121:0] call_ret3_3_2_sp_extender_fu_358_ap_return_0;
wire   [121:0] call_ret3_3_2_sp_extender_fu_358_ap_return_1;
wire   [121:0] call_ret3_3_2_sp_extender_fu_358_ap_return_2;
wire   [121:0] call_ret3_3_3_sp_extender_fu_366_ap_return_0;
wire   [121:0] call_ret3_3_3_sp_extender_fu_366_ap_return_1;
wire   [121:0] call_ret3_3_3_sp_extender_fu_366_ap_return_2;
wire   [121:0] call_ret3_3_4_sp_extender_fu_374_ap_return_0;
wire   [121:0] call_ret3_3_4_sp_extender_fu_374_ap_return_1;
wire   [121:0] call_ret3_3_4_sp_extender_fu_374_ap_return_2;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'b1;
#0 inst_temp1_V_0_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_0_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_0_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_0_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_0_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_0_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_0_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_0_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_0_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_0_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_1_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_1_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_1_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_1_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_1_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_1_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_1_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_1_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_1_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_1_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_2_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_2_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_2_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_2_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_2_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_2_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_2_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_2_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_2_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_2_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_3_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_3_0 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_3_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_3_1 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_3_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_3_2 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_3_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_3_3 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp1_V_3_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
#0 inst_temp2_V_3_4 = 122'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

sp_extender call_ret3_sp_extender_fu_222(
    .extend_temp1_V_read(inst_temp1_V_0_0),
    .extend_temp2_V_read(inst_temp2_V_0_0),
    .extend_temp1_V_write(ap_const_lv122_0),
    .ap_return_0(call_ret3_sp_extender_fu_222_ap_return_0),
    .ap_return_1(call_ret3_sp_extender_fu_222_ap_return_1),
    .ap_return_2(call_ret3_sp_extender_fu_222_ap_return_2)
);

sp_extender call_ret3_0_1_sp_extender_fu_230(
    .extend_temp1_V_read(inst_temp1_V_0_1),
    .extend_temp2_V_read(inst_temp2_V_0_1),
    .extend_temp1_V_write(inp_0_1_V_read),
    .ap_return_0(call_ret3_0_1_sp_extender_fu_230_ap_return_0),
    .ap_return_1(call_ret3_0_1_sp_extender_fu_230_ap_return_1),
    .ap_return_2(call_ret3_0_1_sp_extender_fu_230_ap_return_2)
);

sp_extender call_ret3_0_2_sp_extender_fu_238(
    .extend_temp1_V_read(inst_temp1_V_0_2),
    .extend_temp2_V_read(inst_temp2_V_0_2),
    .extend_temp1_V_write(inp_0_2_V_read),
    .ap_return_0(call_ret3_0_2_sp_extender_fu_238_ap_return_0),
    .ap_return_1(call_ret3_0_2_sp_extender_fu_238_ap_return_1),
    .ap_return_2(call_ret3_0_2_sp_extender_fu_238_ap_return_2)
);

sp_extender call_ret3_0_3_sp_extender_fu_246(
    .extend_temp1_V_read(inst_temp1_V_0_3),
    .extend_temp2_V_read(inst_temp2_V_0_3),
    .extend_temp1_V_write(inp_0_3_V_read),
    .ap_return_0(call_ret3_0_3_sp_extender_fu_246_ap_return_0),
    .ap_return_1(call_ret3_0_3_sp_extender_fu_246_ap_return_1),
    .ap_return_2(call_ret3_0_3_sp_extender_fu_246_ap_return_2)
);

sp_extender call_ret3_0_4_sp_extender_fu_254(
    .extend_temp1_V_read(inst_temp1_V_0_4),
    .extend_temp2_V_read(inst_temp2_V_0_4),
    .extend_temp1_V_write(inp_0_4_V_read),
    .ap_return_0(call_ret3_0_4_sp_extender_fu_254_ap_return_0),
    .ap_return_1(call_ret3_0_4_sp_extender_fu_254_ap_return_1),
    .ap_return_2(call_ret3_0_4_sp_extender_fu_254_ap_return_2)
);

sp_extender call_ret3_1_sp_extender_fu_262(
    .extend_temp1_V_read(inst_temp1_V_1_0),
    .extend_temp2_V_read(inst_temp2_V_1_0),
    .extend_temp1_V_write(ap_const_lv122_0),
    .ap_return_0(call_ret3_1_sp_extender_fu_262_ap_return_0),
    .ap_return_1(call_ret3_1_sp_extender_fu_262_ap_return_1),
    .ap_return_2(call_ret3_1_sp_extender_fu_262_ap_return_2)
);

sp_extender call_ret3_1_1_sp_extender_fu_270(
    .extend_temp1_V_read(inst_temp1_V_1_1),
    .extend_temp2_V_read(inst_temp2_V_1_1),
    .extend_temp1_V_write(inp_1_1_V_read),
    .ap_return_0(call_ret3_1_1_sp_extender_fu_270_ap_return_0),
    .ap_return_1(call_ret3_1_1_sp_extender_fu_270_ap_return_1),
    .ap_return_2(call_ret3_1_1_sp_extender_fu_270_ap_return_2)
);

sp_extender call_ret3_1_2_sp_extender_fu_278(
    .extend_temp1_V_read(inst_temp1_V_1_2),
    .extend_temp2_V_read(inst_temp2_V_1_2),
    .extend_temp1_V_write(inp_1_2_V_read),
    .ap_return_0(call_ret3_1_2_sp_extender_fu_278_ap_return_0),
    .ap_return_1(call_ret3_1_2_sp_extender_fu_278_ap_return_1),
    .ap_return_2(call_ret3_1_2_sp_extender_fu_278_ap_return_2)
);

sp_extender call_ret3_1_3_sp_extender_fu_286(
    .extend_temp1_V_read(inst_temp1_V_1_3),
    .extend_temp2_V_read(inst_temp2_V_1_3),
    .extend_temp1_V_write(inp_1_3_V_read),
    .ap_return_0(call_ret3_1_3_sp_extender_fu_286_ap_return_0),
    .ap_return_1(call_ret3_1_3_sp_extender_fu_286_ap_return_1),
    .ap_return_2(call_ret3_1_3_sp_extender_fu_286_ap_return_2)
);

sp_extender call_ret3_1_4_sp_extender_fu_294(
    .extend_temp1_V_read(inst_temp1_V_1_4),
    .extend_temp2_V_read(inst_temp2_V_1_4),
    .extend_temp1_V_write(inp_1_4_V_read),
    .ap_return_0(call_ret3_1_4_sp_extender_fu_294_ap_return_0),
    .ap_return_1(call_ret3_1_4_sp_extender_fu_294_ap_return_1),
    .ap_return_2(call_ret3_1_4_sp_extender_fu_294_ap_return_2)
);

sp_extender call_ret3_2_sp_extender_fu_302(
    .extend_temp1_V_read(inst_temp1_V_2_0),
    .extend_temp2_V_read(inst_temp2_V_2_0),
    .extend_temp1_V_write(ap_const_lv122_0),
    .ap_return_0(call_ret3_2_sp_extender_fu_302_ap_return_0),
    .ap_return_1(call_ret3_2_sp_extender_fu_302_ap_return_1),
    .ap_return_2(call_ret3_2_sp_extender_fu_302_ap_return_2)
);

sp_extender call_ret3_2_1_sp_extender_fu_310(
    .extend_temp1_V_read(inst_temp1_V_2_1),
    .extend_temp2_V_read(inst_temp2_V_2_1),
    .extend_temp1_V_write(inp_2_1_V_read),
    .ap_return_0(call_ret3_2_1_sp_extender_fu_310_ap_return_0),
    .ap_return_1(call_ret3_2_1_sp_extender_fu_310_ap_return_1),
    .ap_return_2(call_ret3_2_1_sp_extender_fu_310_ap_return_2)
);

sp_extender call_ret3_2_2_sp_extender_fu_318(
    .extend_temp1_V_read(inst_temp1_V_2_2),
    .extend_temp2_V_read(inst_temp2_V_2_2),
    .extend_temp1_V_write(inp_2_2_V_read),
    .ap_return_0(call_ret3_2_2_sp_extender_fu_318_ap_return_0),
    .ap_return_1(call_ret3_2_2_sp_extender_fu_318_ap_return_1),
    .ap_return_2(call_ret3_2_2_sp_extender_fu_318_ap_return_2)
);

sp_extender call_ret3_2_3_sp_extender_fu_326(
    .extend_temp1_V_read(inst_temp1_V_2_3),
    .extend_temp2_V_read(inst_temp2_V_2_3),
    .extend_temp1_V_write(inp_2_3_V_read),
    .ap_return_0(call_ret3_2_3_sp_extender_fu_326_ap_return_0),
    .ap_return_1(call_ret3_2_3_sp_extender_fu_326_ap_return_1),
    .ap_return_2(call_ret3_2_3_sp_extender_fu_326_ap_return_2)
);

sp_extender call_ret3_2_4_sp_extender_fu_334(
    .extend_temp1_V_read(inst_temp1_V_2_4),
    .extend_temp2_V_read(inst_temp2_V_2_4),
    .extend_temp1_V_write(inp_2_4_V_read),
    .ap_return_0(call_ret3_2_4_sp_extender_fu_334_ap_return_0),
    .ap_return_1(call_ret3_2_4_sp_extender_fu_334_ap_return_1),
    .ap_return_2(call_ret3_2_4_sp_extender_fu_334_ap_return_2)
);

sp_extender call_ret3_3_sp_extender_fu_342(
    .extend_temp1_V_read(inst_temp1_V_3_0),
    .extend_temp2_V_read(inst_temp2_V_3_0),
    .extend_temp1_V_write(ap_const_lv122_0),
    .ap_return_0(call_ret3_3_sp_extender_fu_342_ap_return_0),
    .ap_return_1(call_ret3_3_sp_extender_fu_342_ap_return_1),
    .ap_return_2(call_ret3_3_sp_extender_fu_342_ap_return_2)
);

sp_extender call_ret3_3_1_sp_extender_fu_350(
    .extend_temp1_V_read(inst_temp1_V_3_1),
    .extend_temp2_V_read(inst_temp2_V_3_1),
    .extend_temp1_V_write(inp_3_1_V_read),
    .ap_return_0(call_ret3_3_1_sp_extender_fu_350_ap_return_0),
    .ap_return_1(call_ret3_3_1_sp_extender_fu_350_ap_return_1),
    .ap_return_2(call_ret3_3_1_sp_extender_fu_350_ap_return_2)
);

sp_extender call_ret3_3_2_sp_extender_fu_358(
    .extend_temp1_V_read(inst_temp1_V_3_2),
    .extend_temp2_V_read(inst_temp2_V_3_2),
    .extend_temp1_V_write(inp_3_2_V_read),
    .ap_return_0(call_ret3_3_2_sp_extender_fu_358_ap_return_0),
    .ap_return_1(call_ret3_3_2_sp_extender_fu_358_ap_return_1),
    .ap_return_2(call_ret3_3_2_sp_extender_fu_358_ap_return_2)
);

sp_extender call_ret3_3_3_sp_extender_fu_366(
    .extend_temp1_V_read(inst_temp1_V_3_3),
    .extend_temp2_V_read(inst_temp2_V_3_3),
    .extend_temp1_V_write(inp_3_3_V_read),
    .ap_return_0(call_ret3_3_3_sp_extender_fu_366_ap_return_0),
    .ap_return_1(call_ret3_3_3_sp_extender_fu_366_ap_return_1),
    .ap_return_2(call_ret3_3_3_sp_extender_fu_366_ap_return_2)
);

sp_extender call_ret3_3_4_sp_extender_fu_374(
    .extend_temp1_V_read(inst_temp1_V_3_4),
    .extend_temp2_V_read(inst_temp2_V_3_4),
    .extend_temp1_V_write(ap_const_lv122_0),
    .ap_return_0(call_ret3_3_4_sp_extender_fu_374_ap_return_0),
    .ap_return_1(call_ret3_3_4_sp_extender_fu_374_ap_return_1),
    .ap_return_2(call_ret3_3_4_sp_extender_fu_374_ap_return_2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        inst_temp1_V_0_0 <= call_ret3_sp_extender_fu_222_ap_return_1;
        inst_temp1_V_0_1 <= call_ret3_0_1_sp_extender_fu_230_ap_return_1;
        inst_temp1_V_0_2 <= call_ret3_0_2_sp_extender_fu_238_ap_return_1;
        inst_temp1_V_0_3 <= call_ret3_0_3_sp_extender_fu_246_ap_return_1;
        inst_temp1_V_0_4 <= call_ret3_0_4_sp_extender_fu_254_ap_return_1;
        inst_temp1_V_1_0 <= call_ret3_1_sp_extender_fu_262_ap_return_1;
        inst_temp1_V_1_1 <= call_ret3_1_1_sp_extender_fu_270_ap_return_1;
        inst_temp1_V_1_2 <= call_ret3_1_2_sp_extender_fu_278_ap_return_1;
        inst_temp1_V_1_3 <= call_ret3_1_3_sp_extender_fu_286_ap_return_1;
        inst_temp1_V_1_4 <= call_ret3_1_4_sp_extender_fu_294_ap_return_1;
        inst_temp1_V_2_0 <= call_ret3_2_sp_extender_fu_302_ap_return_1;
        inst_temp1_V_2_1 <= call_ret3_2_1_sp_extender_fu_310_ap_return_1;
        inst_temp1_V_2_2 <= call_ret3_2_2_sp_extender_fu_318_ap_return_1;
        inst_temp1_V_2_3 <= call_ret3_2_3_sp_extender_fu_326_ap_return_1;
        inst_temp1_V_2_4 <= call_ret3_2_4_sp_extender_fu_334_ap_return_1;
        inst_temp1_V_3_0 <= call_ret3_3_sp_extender_fu_342_ap_return_1;
        inst_temp1_V_3_1 <= call_ret3_3_1_sp_extender_fu_350_ap_return_1;
        inst_temp1_V_3_2 <= call_ret3_3_2_sp_extender_fu_358_ap_return_1;
        inst_temp1_V_3_3 <= call_ret3_3_3_sp_extender_fu_366_ap_return_1;
        inst_temp1_V_3_4 <= call_ret3_3_4_sp_extender_fu_374_ap_return_1;
        inst_temp2_V_0_0 <= call_ret3_sp_extender_fu_222_ap_return_2;
        inst_temp2_V_0_1 <= call_ret3_0_1_sp_extender_fu_230_ap_return_2;
        inst_temp2_V_0_2 <= call_ret3_0_2_sp_extender_fu_238_ap_return_2;
        inst_temp2_V_0_3 <= call_ret3_0_3_sp_extender_fu_246_ap_return_2;
        inst_temp2_V_0_4 <= call_ret3_0_4_sp_extender_fu_254_ap_return_2;
        inst_temp2_V_1_0 <= call_ret3_1_sp_extender_fu_262_ap_return_2;
        inst_temp2_V_1_1 <= call_ret3_1_1_sp_extender_fu_270_ap_return_2;
        inst_temp2_V_1_2 <= call_ret3_1_2_sp_extender_fu_278_ap_return_2;
        inst_temp2_V_1_3 <= call_ret3_1_3_sp_extender_fu_286_ap_return_2;
        inst_temp2_V_1_4 <= call_ret3_1_4_sp_extender_fu_294_ap_return_2;
        inst_temp2_V_2_0 <= call_ret3_2_sp_extender_fu_302_ap_return_2;
        inst_temp2_V_2_1 <= call_ret3_2_1_sp_extender_fu_310_ap_return_2;
        inst_temp2_V_2_2 <= call_ret3_2_2_sp_extender_fu_318_ap_return_2;
        inst_temp2_V_2_3 <= call_ret3_2_3_sp_extender_fu_326_ap_return_2;
        inst_temp2_V_2_4 <= call_ret3_2_4_sp_extender_fu_334_ap_return_2;
        inst_temp2_V_3_0 <= call_ret3_3_sp_extender_fu_342_ap_return_2;
        inst_temp2_V_3_1 <= call_ret3_3_1_sp_extender_fu_350_ap_return_2;
        inst_temp2_V_3_2 <= call_ret3_3_2_sp_extender_fu_358_ap_return_2;
        inst_temp2_V_3_3 <= call_ret3_3_3_sp_extender_fu_366_ap_return_2;
        inst_temp2_V_3_4 <= call_ret3_3_4_sp_extender_fu_374_ap_return_2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_18) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return_0 = call_ret3_sp_extender_fu_222_ap_return_0;

assign ap_return_1 = call_ret3_0_1_sp_extender_fu_230_ap_return_0;

assign ap_return_10 = call_ret3_2_sp_extender_fu_302_ap_return_0;

assign ap_return_11 = call_ret3_2_1_sp_extender_fu_310_ap_return_0;

assign ap_return_12 = call_ret3_2_2_sp_extender_fu_318_ap_return_0;

assign ap_return_13 = call_ret3_2_3_sp_extender_fu_326_ap_return_0;

assign ap_return_14 = call_ret3_2_4_sp_extender_fu_334_ap_return_0;

assign ap_return_15 = call_ret3_3_sp_extender_fu_342_ap_return_0;

assign ap_return_16 = call_ret3_3_1_sp_extender_fu_350_ap_return_0;

assign ap_return_17 = call_ret3_3_2_sp_extender_fu_358_ap_return_0;

assign ap_return_18 = call_ret3_3_3_sp_extender_fu_366_ap_return_0;

assign ap_return_19 = call_ret3_3_4_sp_extender_fu_374_ap_return_0;

assign ap_return_2 = call_ret3_0_2_sp_extender_fu_238_ap_return_0;

assign ap_return_3 = call_ret3_0_3_sp_extender_fu_246_ap_return_0;

assign ap_return_4 = call_ret3_0_4_sp_extender_fu_254_ap_return_0;

assign ap_return_5 = call_ret3_1_sp_extender_fu_262_ap_return_0;

assign ap_return_6 = call_ret3_1_1_sp_extender_fu_270_ap_return_0;

assign ap_return_7 = call_ret3_1_2_sp_extender_fu_278_ap_return_0;

assign ap_return_8 = call_ret3_1_3_sp_extender_fu_286_ap_return_0;

assign ap_return_9 = call_ret3_1_4_sp_extender_fu_294_ap_return_0;

always @ (*) begin
    ap_sig_18 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

endmodule //sp_extend_sector
